!function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=2)}([function(e,n){e.exports=function(e,n){return new Promise(function(t,o){axios.get("templates/"+e+".hbs").then(function(e){document.getElementById(n).innerHTML=e.data,t("ok")})})}},function(e,n){e.exports=function(e){var n={};return new FormData(e).forEach(function(e,t){n[t]=e}),JSON.stringify(n)}},function(e,n,t){const o=t(3),r=t(4),i=t(5),a=t(6);var u={"/":o,"/addnode":i,"/addtree":r.addTree,"/home":a,"/tree/:treeName":r.tree};Router(u).init("/"),void 0!=localStorage.getItem("token")?window.location.assign("/#/home"):window.location.assign("/#/login")},function(e,n,t){const o=t(1);e.exports=function(){axios.get("templates/login.hbs").then(function(e){var n=Handlebars.compile(e.data);document.getElementById("render").innerHTML=n(),function(){var e=document.getElementById("login");e.addEventListener("submit",function(n){n.preventDefault();var t=o(e);axios.post("api/current/user/login",t).then(function(e){200==e.status&&(window.location.assign("#/home"),localStorage.setItem("token",e.data.token))})},!1)}()})}},function(e,n,t){const o=t(0),r=t(1);e.exports={addTree:function(){o("layout","render").then(()=>o("addTree","content")).then(()=>{!function(){var e=document.getElementById("newTree");e.addEventListener("submit",function(n){n.preventDefault();var t=r(e),o=JSON.parse(t);localStorage.setItem(o.name,t);var o=JSON.parse(t);console.log(o),window.location.assign("#/tree/"+o.name)},!1)}()})},tree:function(e){o("layout","render").then(()=>o("nodeDescription","content")).then(()=>{console.log(e)}).then(()=>{!function(e){var n=localStorage.getItem(e),t=JSON.parse(n);p.innerHTML=t.name,console.log(t)}(e)})}}},function(e,n,t){const o=t(0);e.exports=function(){o("layout","render").then(()=>o("addNode","content"))}},function(e,n,t){const o=t(0);e.exports=function(){o("layout","render").then(()=>o("home","container"))}}]);